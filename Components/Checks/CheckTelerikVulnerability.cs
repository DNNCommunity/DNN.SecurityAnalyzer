using System;
using System.Collections.Generic;
using System.IO;
using DotNetNuke.Common;
using DotNetNuke.Common.Utilities;
using Assembly = System.Reflection.Assembly;

namespace DNN.Modules.SecurityAnalyzer.Components.Checks
{
    public class CheckTelerikVulnerability : IAuditCheck
    {
        public CheckResult Execute()
        {
            var result = new CheckResult(SeverityEnum.Unverified, "CheckTelerikVulnerability");

            var fileSums = new List<string>
            {
                "1ccb4c868938c15d209cae7ace3161420d85f58cbe74a7b3dfb6a2dc9100f6a3", //Telerik 2013.2.717.40
                "fb686c941d1504de1b21ec353e887d640a752d537c91a19d89a0bfbadad5b76f"  //Telerik 2013.2.717.35
            };
            const string asyncUploadSettingName = "Telerik.AsyncUpload.ConfigurationEncryptionKey";
            const string dialogParameterSettingName = "Telerik.Web.UI.DialogParametersEncryptionKey";
            var compareVersion = new Version(2017, 2, 621);
            var filePath = Path.Combine(Globals.ApplicationMapPath, "bin\\Telerik.Web.UI.dll");
            result.Severity = SeverityEnum.Pass;

            if (File.Exists(filePath))
            {
                var assemblyVersion = Assembly.LoadFile(filePath).GetName().Version;
                if ((assemblyVersion < compareVersion && !fileSums.Contains(Utility.GetFileCheckSum(filePath))))
                {
                    result.Severity = SeverityEnum.Failure;
                    result.Notes.Add("Telerik.Web.UI.dll assembly is not patched.");
                }

                if (string.IsNullOrEmpty(Config.GetSetting(asyncUploadSettingName)))
                {
                    result.Severity = SeverityEnum.Failure;
                    result.Notes.Add("App Setting \"Telerik.AsyncUpload.ConfigurationEncryptionKey\" doesn't exist in web.config.");
                }

                if (string.IsNullOrEmpty(Config.GetSetting(dialogParameterSettingName)))
                {
                    result.Severity = SeverityEnum.Failure;
                    result.Notes.Add("App Setting \"Telerik.Web.UI.DialogParametersEncryptionKey\" doesn't exist in web.config.");
                }
            }
            else
            {
                result.Notes.Add("Telerik component is not installed in this site.");
            }

            return result;
        }
    }
}